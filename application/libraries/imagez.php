<?php

/* Base Class Imagez - min version
 * Script type PHP - Codeigniter Framework Version [PLUG IN] Library
 * Script Writer by AhmadHendri 2015 - Image Auto Size and Compressor */

class Imagez{public function compress($folder,$file,$new_width,$quality=100){$location=$folder.$file;$image=getimagesize($location);$mime=$image['mime'];list($oldWidth,$oldHeight)=$image;$scale=$new_width/$oldWidth;$width=ceil($oldWidth*$scale);$height=ceil($oldHeight*$scale);$createFrom=$this->createFrom($mime,$location);$createTrue=imagecreatetruecolor($width,$height);imagecopyresampled($createTrue,$createFrom,0,0,0,0,$width,$height,$oldWidth,$oldHeight);$this->createImage($mime,$createTrue,$location,$quality);}public function crop($folder,$file,$new_width,$new_height,$quality=100,$spark=''){$location=$folder.$file;$image=getimagesize($location);list($width,$height)=$image;$mime=$image['mime'];$newFile=$this->rename($location,$spark);$newLocation=$folder.$newFile;$scaleWidth=$new_width/$width;$scaleHeight=$new_height/$height;$scale=($scaleWidth>$scaleHeight)?$scaleWidth:$scaleHeight;$nsWidth=ceil($width*$scale);$nsHeight=ceil($height*$scale);$dsw=-($nsWidth-$new_width)/2;$dsh=-($nsHeight-$new_height)/2;$createFrom=$this->createFrom($mime,$location);$createTrue=imagecreatetruecolor($new_width,$new_height);imagecopyresampled($createTrue,$createFrom,$dsw,$dsh,0,0,$nsWidth,$nsHeight,$width,$height);$this->createImage($mime,$createTrue,$newLocation,$quality);}public function watermark($file_location,$watermark_file='',$mode='BR'){$target=$file_location;$watermark=imagecreatefrompng($watermark_file);imagealphablending($watermark,false);imagesavealpha($watermark,true);$i=imagecreatefromjpeg($target);$w=imagesx($i);$h=imagesy($i);$ww=imagesx($watermark);$wy=imagesy($watermark);switch($mode){case 'TL':$dx=0;$dy=0;break;case 'TR':$dx=$w-$ww;$dy=0;break;case 'BL':$dx=0;$dy=$h-$wy;break;case 'BR':$dx=$w-$ww;$dy=$h-$wy;break;default:$dx=0;$dy=0;break;}imagecopy($i,$watermark,$dx,$dy,0,0,$ww,$wy);imagejpeg($i,$target,50);}public function rename($filename,$new=''){$extensi=pathinfo($filename,PATHINFO_EXTENSION);$filename=pathinfo($filename,PATHINFO_FILENAME);$filename=($new=='')?md5(uniqid()):$filename.$new;return $filename.'.'.$extensi;}public function display_image($file,$spark='',$option=''){$filename=$this->load_image($file,$spark);$o='<img src="'.base_url($filename).'" ';if($option!=''){if(is_array($option)){foreach($option as $row=>$value){$o.=$row.'="'.$value.'" ';}}else{$o.=$option.' ';}}$o=rtrim($o,' ');$o.='/>';return $o;}public function load_image($file,$spark=''){$directory=pathinfo($file,PATHINFO_DIRNAME);$filename=pathinfo($file,PATHINFO_FILENAME);$extensi=pathinfo($file,PATHINFO_EXTENSION);return $directory.'/'.$filename.$spark.'.'.$extensi;}public function remove_image($folder,$filename,$spark=''){if(is_array($spark)){foreach($spark as $row){unlink($this->load_image($folder.$filename,$row));}}else{unlink($this->load_image($folder.$filename,''));}}public function createFrom($mime,$location){switch($mime){case 'image/jpeg':$result=imagecreatefromjpeg($location);break;case 'image/png':$result=imagecreatefrompng($location);break;case 'image/gif':$result=imagecreatefromgif($location);break;default:$result=imagecreatefromjpeg($location);break;}return $result;}public function createImage($mime,$createTrue,$filename,$quality){switch($mime){case 'image/jpeg':$result=imagejpeg($createTrue,$filename,$quality);break;case 'image/png':$result=imagepng($createTrue,$filename,$quality/15);break;case 'image/gif':$result=imagegif($createTrue,$filename,$quality);break;default:$result=imagejpeg($createTrue,$filename,$quality);break;}return $result;}}